{"ast":null,"code":"import _toConsumableArray from \"/Users/iiiio/Desktop/f/4/COSI103/pa05/COSI103a/pa05/todoapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/iiiio/Desktop/f/4/COSI103/pa05/COSI103a/pa05/todoapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/iiiio/Desktop/f/4/COSI103/pa05/COSI103a/pa05/todoapp/src/Transaction.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getTransactionsFromLocalStorage() {\n  // getting stored value\n  var saved = localStorage.getItem(\"transactions\");\n  var initialValue = JSON.parse(saved) || [];\n  // relabel the keys from 0 to length-1\n  for (var i = 0; i < initialValue.length; i++) {\n    initialValue[i]['key'] = i;\n  }\n  return initialValue || [];\n}\nfunction testing() {\n  console.log(\"This is a test!\");\n}\nexport default function Transaction() {\n  _s();\n  var _this2 = this;\n  var _useState = useState(getTransactionsFromLocalStorage),\n    _useState2 = _slicedToArray(_useState, 2),\n    transactions = _useState2[0],\n    setTransactions = _useState2[1];\n  var _useState3 = useState(function () {\n      return transactions.length;\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    numKeys = _useState4[0],\n    setNumKeys = _useState4[1];\n  var _useState5 = useState(\"default\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    summaryData = _useState6[0],\n    setSummary = _useState6[1];\n  // let [summaryData, setSummary] = useState(getTransactionsFromLocalStorage);\n  var _useState7 = useState('none'),\n    _useState8 = _slicedToArray(_useState7, 2),\n    msg = _useState8[0],\n    setMsg = _useState8[1];\n  function add_transaction() {\n    var itemId = document.getElementById(\"itemId\").value;\n    var amount = document.getElementById(\"amount\").value;\n    var category = document.getElementById(\"category\").value;\n    var date = document.getElementById(\"date\").value;\n    var description = document.getElementById(\"description\").value;\n    var newTransaction = {\n      key: numKeys,\n      itemId: itemId,\n      amount: amount,\n      category: category,\n      date: date,\n      description: description\n    };\n    document.getElementById(\"itemId\").value = \"\";\n    document.getElementById(\"amount\").value = \"\";\n    document.getElementById(\"category\").value = \"\";\n    document.getElementById(\"date\").value = \"\";\n    document.getElementById(\"description\").value = \"\";\n    setNumKeys(numKeys + 1);\n    setTransactions([newTransaction].concat(_toConsumableArray(transactions))); // using the spread operator ...\n  }\n\n  function deleteTransaction(key) {\n    console.log(key);\n    var newTransaction = transactions.filter(function (x) {\n      return x['key'] !== key;\n    });\n    setTransactions(newTransaction);\n    setNumKeys(numKeys - 1);\n  }\n\n  // function summarizeByDate(transactions) {\n  //   const summary = {};\n  //   transactions.forEach((transaction) => {\n  //     const date = transaction.date;\n  //     if (summary[date]) {\n  //       summary[date].push(transaction);\n  //     } else {\n  //       summary[date] = [transaction];\n  //     }\n  //   });\n  //   return summary;\n  // }\n\n  // function summarizeByMonth(transactions) {\n  //   const summary = {};\n  //   transactions.forEach((transaction) => {\n  //     const month = transaction.date.slice(0, 7);\n  //     if (summary[month]) {\n  //       summary[month].push(transaction);\n  //     } else {\n  //       summary[month] = [transaction];\n  //     }\n  //   });\n  //   return summary;\n  // }\n\n  // function summarizeByYear(transactions) {\n  //   const summary = {};\n  //   transactions.forEach((transaction) => {\n  //     const year = transaction.date.slice(0, 4);\n  //     if (summary[year]) {\n  //       summary[year].push(transaction);\n  //     } else {\n  //       summary[year] = [transaction];\n  //     }\n  //   });\n  //   return summary;\n  // }\n\n  // function summarizeByCategory(transactions) {\n  //   const summary = {};\n  //   transactions.forEach((transaction) => {\n  //     const category = transaction.category;\n  //     if (summary[category]) {\n  //       summary[category].push(transaction);\n  //     } else {\n  //       summary[category] = [transaction];\n  //     }\n  //   });\n  //   return summary;\n  // }\n\n  // function renderSummary() {\n  //   if (!summaryData || !summaryData.data) {\n  //     return <div>No summary data available.</div>;\n  //   }\n\n  //   return (\n  //     <table className=\"summary-table\">\n  //       <thead>\n  //         <tr>\n  //           <th>{summaryData.label}</th>\n  //           <th>Amount</th>\n  //         </tr>\n  //       </thead>\n  //       <tbody>\n  //         {Object.entries(summaryData.data).map(([key, value]) => (\n  //           <tr key={key}>\n  //             <td>{key}</td>\n  //             <td>{value}</td>\n  //           </tr>\n  //         ))}\n  //       </tbody>\n  //     </table>\n  //   );\n  // }\n  function renderTransactions() {\n    var _this = this;\n    var summary = {};\n    transactions.forEach(function (transaction) {\n      var groupBy;\n      switch (displayMode) {\n        case \"date\":\n          groupBy = transaction.date;\n          break;\n        case \"month\":\n          groupBy = transaction.date.slice(0, 7);\n          break;\n        case \"year\":\n          groupBy = transaction.date.slice(0, 4);\n          break;\n        case \"category\":\n          groupBy = transaction.category;\n          break;\n        default:\n          groupBy = \"default\";\n      }\n      if (summary[groupBy]) {\n        summary[groupBy].push(transaction);\n      } else {\n        summary[groupBy] = [transaction];\n      }\n    });\n    if (displayMode === \"default\") {\n      return summary.default.map(function (transaction) {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: function onClick() {\n                return deleteTransaction(transaction[\"key\"]);\n              },\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 13\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.itemId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 11\n          }, _this)]\n        }, transaction.key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 9\n        }, _this);\n      });\n    } else {\n      return Object.entries(summary).map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n          group = _ref2[0],\n          groupedTransactions = _ref2[1];\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"6\",\n              style: {\n                fontWeight: \"bold\"\n              },\n              children: [displayMode.charAt(0).toUpperCase() + displayMode.slice(1), \": \", group]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 13\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 11\n          }, _this), groupedTransactions.map(function (transaction) {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: function onClick() {\n                    return deleteTransaction(transaction[\"key\"]);\n                  },\n                  children: \"X\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 17\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 15\n              }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: transaction.itemId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 15\n              }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: transaction.amount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 15\n              }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: transaction.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 15\n              }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: transaction.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 15\n              }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: transaction.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 15\n              }, _this)]\n            }, transaction.key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 13\n            }, _this);\n          })]\n        }, group, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 9\n        }, _this);\n      });\n    }\n  }\n  useEffect(function () {\n    // storing items if items changes value\n    localStorage.setItem(\"transactions\", JSON.stringify(transactions));\n  }, [transactions]);\n\n  // // demo of how to get data from an Express server\n  // useEffect(() => {\n  //   const getMsg = async () => {\n  //     const response = await fetch('http://localhost:3000/test');\n  //     const result = await response.json();\n  //     setMsg(result);\n  //     console.log('msg =',result);\n  //   }\n  //   getMsg()\n  // },[msg])\n\n  // this is used to allow text data to be submitted\n  // when the user hits the 'Enter' key\n  var handleKeyDown = function handleKeyDown(event) {\n    if (event.key === 'Enter') {\n      // 👇 Get input value\n      add_transaction();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"bg-warning text-center p-2\",\n      children: \"Transaction Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"List of your Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"transaction-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: transactions.map(function (transaction) {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: function onClick() {\n                  return deleteTransaction(transaction[\"key\"]);\n                },\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, _this2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, _this2), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.itemId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, _this2), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, _this2), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, _this2), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, _this2), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, _this2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, _this2);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return setSummary(summarizeByDate(transactions));\n      },\n      children: \"Summarize by Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return setSummary(summarizeByMonth(transactions));\n      },\n      children: \"Summarize by Month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return setSummary(summarizeByYear(transactions));\n      },\n      children: \"Summarize by Year\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return setSummary(summarizeByCategory(transactions));\n      },\n      children: \"Summarize by Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Summary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: renderSummary()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Add new transaction item \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      id: \"itemId\",\n      placeholder: \"Item ID\",\n      onKeyDown: handleKeyDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      id: \"amount\",\n      placeholder: \"Amount\",\n      onKeyDown: handleKeyDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"category\",\n      placeholder: \"Category\",\n      onKeyDown: handleKeyDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      id: \"date\",\n      placeholder: \"Date\",\n      onKeyDown: handleKeyDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"description\",\n      placeholder: \"Description\",\n      onKeyDown: handleKeyDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return add_transaction();\n      },\n      children: \"Add Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" DEBUGGING: list of items in JSON \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(transactions, null, 5)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n}\n_s(Transaction, \"MO7G4xQZB4/S7DFbNfyukrL2fRI=\");\n_c = Transaction;\nvar _c;\n$RefreshReg$(_c, \"Transaction\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","getTransactionsFromLocalStorage","saved","localStorage","getItem","initialValue","JSON","parse","i","length","testing","console","log","Transaction","_s","_this2","_useState","_useState2","_slicedToArray","transactions","setTransactions","_useState3","_useState4","numKeys","setNumKeys","_useState5","_useState6","summaryData","setSummary","_useState7","_useState8","msg","setMsg","add_transaction","itemId","document","getElementById","value","amount","category","date","description","newTransaction","key","concat","_toConsumableArray","deleteTransaction","filter","x","renderTransactions","_this","summary","forEach","transaction","groupBy","displayMode","slice","push","default","map","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","_ref","_ref2","group","groupedTransactions","Fragment","colSpan","style","fontWeight","charAt","toUpperCase","setItem","stringify","handleKeyDown","event","className","summarizeByDate","summarizeByMonth","summarizeByYear","summarizeByCategory","renderSummary","type","id","placeholder","onKeyDown","_c","$RefreshReg$"],"sources":["/Users/iiiio/Desktop/f/4/COSI103/pa05/COSI103a/pa05/todoapp/src/Transaction.js"],"sourcesContent":["import React,{useState,useEffect} from \"react\";\nimport \"./styles.css\";\n\n\n\nfunction getTransactionsFromLocalStorage() {\n  // getting stored value\n  const saved = localStorage.getItem(\"transactions\");\n  const initialValue = JSON.parse(saved)||[];\n  // relabel the keys from 0 to length-1\n  for(let i=0;i<initialValue.length;i++){\n    initialValue[i]['key']=i\n  }\n  return initialValue || [];\n}\n\nfunction testing(){\n    console.log(\"This is a test!\")\n}\n\n\nexport default function Transaction() {\n\n  let [transactions, setTransactions] = useState(getTransactionsFromLocalStorage);\n  let [numKeys,setNumKeys] = useState(() => transactions.length)\n  let [summaryData, setSummary] = useState(\"default\");\n  // let [summaryData, setSummary] = useState(getTransactionsFromLocalStorage);\n  let [msg,setMsg] = useState('none');\n\n  function add_transaction() {\n    const itemId = document.getElementById(\"itemId\").value;\n    const amount = document.getElementById(\"amount\").value;\n    const category = document.getElementById(\"category\").value;\n    const date = document.getElementById(\"date\").value;\n    const description = document.getElementById(\"description\").value;\n\n    let newTransaction = {\n      key: numKeys,\n      itemId,\n      amount,\n      category,\n      date,\n      description,\n    };\n    document.getElementById(\"itemId\").value = \"\";\n    document.getElementById(\"amount\").value = \"\";\n    document.getElementById(\"category\").value = \"\";\n    document.getElementById(\"date\").value = \"\";\n    document.getElementById(\"description\").value = \"\";\n    setNumKeys(numKeys+1)\n    setTransactions([newTransaction,...transactions]); // using the spread operator ...\n  }\n\n  function deleteTransaction(key){\n    console.log(key)\n    const newTransaction = transactions.filter((x)=> x['key']!== key)\n    setTransactions(newTransaction);\n    setNumKeys(numKeys - 1);\n  }\n\n  // function summarizeByDate(transactions) {\n  //   const summary = {};\n  //   transactions.forEach((transaction) => {\n  //     const date = transaction.date;\n  //     if (summary[date]) {\n  //       summary[date].push(transaction);\n  //     } else {\n  //       summary[date] = [transaction];\n  //     }\n  //   });\n  //   return summary;\n  // }\n  \n  // function summarizeByMonth(transactions) {\n  //   const summary = {};\n  //   transactions.forEach((transaction) => {\n  //     const month = transaction.date.slice(0, 7);\n  //     if (summary[month]) {\n  //       summary[month].push(transaction);\n  //     } else {\n  //       summary[month] = [transaction];\n  //     }\n  //   });\n  //   return summary;\n  // }\n  \n  // function summarizeByYear(transactions) {\n  //   const summary = {};\n  //   transactions.forEach((transaction) => {\n  //     const year = transaction.date.slice(0, 4);\n  //     if (summary[year]) {\n  //       summary[year].push(transaction);\n  //     } else {\n  //       summary[year] = [transaction];\n  //     }\n  //   });\n  //   return summary;\n  // }\n  \n  // function summarizeByCategory(transactions) {\n  //   const summary = {};\n  //   transactions.forEach((transaction) => {\n  //     const category = transaction.category;\n  //     if (summary[category]) {\n  //       summary[category].push(transaction);\n  //     } else {\n  //       summary[category] = [transaction];\n  //     }\n  //   });\n  //   return summary;\n  // }\n\n  // function renderSummary() {\n  //   if (!summaryData || !summaryData.data) {\n  //     return <div>No summary data available.</div>;\n  //   }\n  \n  //   return (\n  //     <table className=\"summary-table\">\n  //       <thead>\n  //         <tr>\n  //           <th>{summaryData.label}</th>\n  //           <th>Amount</th>\n  //         </tr>\n  //       </thead>\n  //       <tbody>\n  //         {Object.entries(summaryData.data).map(([key, value]) => (\n  //           <tr key={key}>\n  //             <td>{key}</td>\n  //             <td>{value}</td>\n  //           </tr>\n  //         ))}\n  //       </tbody>\n  //     </table>\n  //   );\n  // }\n  function renderTransactions() {\n    const summary = {};\n\n    transactions.forEach((transaction) => {\n      let groupBy;\n\n      switch (displayMode) {\n        case \"date\":\n          groupBy = transaction.date;\n          break;\n        case \"month\":\n          groupBy = transaction.date.slice(0, 7);\n          break;\n        case \"year\":\n          groupBy = transaction.date.slice(0, 4);\n          break;\n        case \"category\":\n          groupBy = transaction.category;\n          break;\n        default:\n          groupBy = \"default\";\n      }\n\n      if (summary[groupBy]) {\n        summary[groupBy].push(transaction);\n      } else {\n        summary[groupBy] = [transaction];\n      }\n    });\n\n    if (displayMode === \"default\") {\n      return summary.default.map((transaction) => (\n        <tr key={transaction.key}>\n          <td>\n            <button onClick={() => deleteTransaction(transaction[\"key\"])}>X</button>\n          </td>\n          <td>{transaction.itemId}</td>\n          <td>{transaction.amount}</td>\n          <td>{transaction.category}</td>\n          <td>{transaction.date}</td>\n          <td>{transaction.description}</td>\n        </tr>\n      ));\n    } else {\n      return Object.entries(summary).map(([group, groupedTransactions]) => (\n        <React.Fragment key={group}>\n          <tr>\n            <td colSpan=\"6\" style={{ fontWeight: \"bold\" }}>\n              {displayMode.charAt(0).toUpperCase() + displayMode.slice(1)}: {group}\n            </td>\n          </tr>\n          {groupedTransactions.map((transaction) => (\n            <tr key={transaction.key}>\n              <td>\n                <button onClick={() => deleteTransaction(transaction[\"key\"])}>X</button>\n              </td>\n              <td>{transaction.itemId}</td>\n              <td>{transaction.amount}</td>\n              <td>{transaction.category}</td>\n              <td>{transaction.date}</td>\n              <td>{transaction.description}</td>\n            </tr>\n          ))}\n        </React.Fragment>\n      ));\n    }\n  }\n  \n  \n  \n  \n  \n\n  useEffect(() => {\n    // storing items if items changes value\n    localStorage.setItem(\"transactions\", JSON.stringify(transactions));\n  }, [transactions]);\n\n  // // demo of how to get data from an Express server\n  // useEffect(() => {\n  //   const getMsg = async () => {\n  //     const response = await fetch('http://localhost:3000/test');\n  //     const result = await response.json();\n  //     setMsg(result);\n  //     console.log('msg =',result);\n  //   }\n  //   getMsg()\n  // },[msg])\n\n  // this is used to allow text data to be submitted\n  // when the user hits the 'Enter' key\n  const handleKeyDown = (event) => {\n    if (event.key === 'Enter') {\n      // 👇 Get input value\n      add_transaction();\n    }\n  };\n\n\n\n  return (\n    <div className=\"App container\">\n      <h1 className=\"bg-warning text-center p-2\">Transaction Tracker</h1>\n      <h3>List of your Transactions</h3>\n      <table className=\"transaction-table\">\n        <thead>\n          <tr>\n          <th>Delete</th>\n          <th>ID</th>\n          <th>Amount</th>\n          <th>Category</th>\n          <th>Date</th>\n          <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n            {transactions.map((transaction) => (\n            <tr>       \n              <td><button onClick={()=>deleteTransaction(transaction[\"key\"])}>X</button></td>\n              <td>{transaction.itemId}</td>\n              <td>{transaction.amount}</td>\n              <td>{transaction.category}</td>\n              <td>{transaction.date}</td>\n              <td>{transaction.description}</td>\n            </tr>\n            ))}\n        </tbody>\n      </table>\n      <button onClick={() => setSummary(summarizeByDate(transactions))}>Summarize by Date\n      </button>\n      <button onClick={() => setSummary(summarizeByMonth(transactions))}>Summarize by Month\n      </button>\n      <button onClick={() => setSummary(summarizeByYear(transactions))}>Summarize by Year\n      </button>\n      <button onClick={() => setSummary(summarizeByCategory(transactions))}>Summarize by Category\n      </button>\n\n      <h2>Summary</h2>\n      <div>{renderSummary()}</div>\n      \n      <h2> Add new transaction item </h2>\n      <input type=\"number\" id=\"itemId\" placeholder=\"Item ID\" onKeyDown={handleKeyDown} />\n      <input type=\"number\" id=\"amount\" placeholder=\"Amount\" onKeyDown={handleKeyDown} />\n      <input type=\"text\" id=\"category\" placeholder=\"Category\" onKeyDown={handleKeyDown} />\n      <input type=\"date\" id=\"date\" placeholder=\"Date\" onKeyDown={handleKeyDown} />\n      <input type=\"text\" id=\"description\" placeholder=\"Description\" onKeyDown={handleKeyDown} />\n      <button onClick={() => add_transaction()}>Add Transaction</button>\n      \n      <h2> DEBUGGING: list of items in JSON </h2>\n      <pre>\n       {JSON.stringify(transactions, null, 5)}\n      </pre>\n    </div>\n    \n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}